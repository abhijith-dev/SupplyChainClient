[{"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Home.js":"1","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Feedback.js":"2","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Auth\\AuthToken.js":"3","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginIndex\\LoginIndex.js":"4","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Signup\\SignupRetailer\\SignupRetailer.js":"5","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\DashBoardW.js":"6","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\DashBoard.js":"7","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Product.js":"8","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Tracker.js":"9","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Profile.js":"10","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Profile.js":"11","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Product.js":"12","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\listItems.js":"13","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Title.js":"14","E:\\SupplyChain\\SupplyChainClient\\client\\src\\App.js":"15","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Cindex.js":"16","E:\\SupplyChain\\SupplyChainClient\\client\\src\\index.js":"17","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\SessionLoading\\SessionLoading.js":"18","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Loading\\Loading.js":"19","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Index\\MIndex.js":"20","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Signup\\SignupDistributor\\SignupDistributor.js":"21","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Signup\\SignupWareHouse\\SignupWareHouse.js":"22","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Signup\\SignupFactory\\SignupFactory.js":"23","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginWarehouse\\Wlogin.js":"24","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginRetailer\\Rlogin.js":"25","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginDistributor\\Dlogin.js":"26","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginFactory\\Flogin.js":"27","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Product.js":"28","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Deposits.js":"29","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Orders.js":"30","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\listItems.js":"31","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\listItems.js":"32","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Profile.js":"33","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Deposits.js":"34","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\listItems.js":"35","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Title.js":"36","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Deposits.js":"37","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Orders.js":"38","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Title.js":"39","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Map.js":"40","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\DashBoardR.js":"41","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Chart.js":"42","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Orders.js":"43","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Title.js":"44","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\DashBoardD.js":"45","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Product.js":"46","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Orders.js":"47","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Loading.js":"48","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Deposits.js":"49","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Nodata.js":"50","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Termsandcondition.js":"51","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Profile.js":"52"},{"size":15892,"mtime":1611538014574,"results":"53","hashOfConfig":"54"},{"size":1992,"mtime":1611491529499,"results":"55","hashOfConfig":"54"},{"size":387,"mtime":1606557059675,"results":"56","hashOfConfig":"54"},{"size":939,"mtime":1607928953964,"results":"57","hashOfConfig":"54"},{"size":10004,"mtime":1611541364767,"results":"58","hashOfConfig":"59"},{"size":13300,"mtime":1611541240345,"results":"60","hashOfConfig":"59"},{"size":15712,"mtime":1611541184699,"results":"61","hashOfConfig":"54"},{"size":8602,"mtime":1624257959788,"results":"62","hashOfConfig":"59"},{"size":3033,"mtime":1611488851608,"results":"63","hashOfConfig":"59"},{"size":5567,"mtime":1610129041783,"results":"64","hashOfConfig":"54"},{"size":5564,"mtime":1610129815008,"results":"65","hashOfConfig":"54"},{"size":3343,"mtime":1624255621035,"results":"66","hashOfConfig":"59"},{"size":1919,"mtime":1608872844106,"results":"67","hashOfConfig":"54"},{"size":356,"mtime":1606987405169,"results":"68","hashOfConfig":"54"},{"size":3500,"mtime":1611539615074,"results":"69","hashOfConfig":"54"},{"size":8056,"mtime":1624255557619,"results":"70","hashOfConfig":"59"},{"size":308,"mtime":1606557494073,"results":"71","hashOfConfig":"59"},{"size":311,"mtime":1606743490734,"results":"72","hashOfConfig":"59"},{"size":217,"mtime":1606745519533,"results":"73","hashOfConfig":"54"},{"size":5701,"mtime":1611499254338,"results":"74","hashOfConfig":"54"},{"size":10050,"mtime":1611541388381,"results":"75","hashOfConfig":"54"},{"size":10018,"mtime":1611541360121,"results":"76","hashOfConfig":"54"},{"size":10434,"mtime":1611541376385,"results":"77","hashOfConfig":"59"},{"size":4895,"mtime":1611541575503,"results":"78","hashOfConfig":"59"},{"size":4888,"mtime":1611541592513,"results":"79","hashOfConfig":"54"},{"size":4906,"mtime":1611541525088,"results":"80","hashOfConfig":"59"},{"size":4912,"mtime":1622529944843,"results":"81","hashOfConfig":"54"},{"size":2683,"mtime":1624255643532,"results":"82","hashOfConfig":"59"},{"size":1628,"mtime":1608877927210,"results":"83","hashOfConfig":"59"},{"size":1992,"mtime":1608876203421,"results":"84","hashOfConfig":"54"},{"size":1919,"mtime":1608872844106,"results":"85","hashOfConfig":"54"},{"size":1919,"mtime":1608872844106,"results":"86","hashOfConfig":"54"},{"size":5565,"mtime":1610128997944,"results":"87","hashOfConfig":"59"},{"size":1628,"mtime":1608877927210,"results":"88","hashOfConfig":"59"},{"size":2588,"mtime":1607931788007,"results":"89","hashOfConfig":"54"},{"size":356,"mtime":1606987405169,"results":"90","hashOfConfig":"59"},{"size":1628,"mtime":1608877927210,"results":"91","hashOfConfig":"54"},{"size":1992,"mtime":1608876203421,"results":"92","hashOfConfig":"54"},{"size":356,"mtime":1606987405169,"results":"93","hashOfConfig":"54"},{"size":9423,"mtime":1624256879745,"results":"94","hashOfConfig":"59"},{"size":13307,"mtime":1611541215414,"results":"95","hashOfConfig":"54"},{"size":1887,"mtime":1611464440131,"results":"96","hashOfConfig":"54"},{"size":1992,"mtime":1608876203421,"results":"97","hashOfConfig":"54"},{"size":356,"mtime":1606987405169,"results":"98","hashOfConfig":"54"},{"size":13333,"mtime":1611541155408,"results":"99","hashOfConfig":"54"},{"size":2686,"mtime":1624255582239,"results":"100","hashOfConfig":"59"},{"size":1948,"mtime":1609429271267,"results":"101","hashOfConfig":"54"},{"size":305,"mtime":1611513673165,"results":"102","hashOfConfig":"54"},{"size":1408,"mtime":1609432946151,"results":"103","hashOfConfig":"54"},{"size":635,"mtime":1611538332930,"results":"104","hashOfConfig":"59"},{"size":1160,"mtime":1611539805092,"results":"105","hashOfConfig":"54"},{"size":5449,"mtime":1610098257409,"results":"106","hashOfConfig":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},"10xwhtd",{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o5j6e9",{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"127"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"119"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Home.js",["223","224"],"import React,{useEffect,useState} from 'react'\r\nimport Axios from 'axios';\r\nimport Map from './Map';\r\nimport Feedback from './Feedback';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Typography,Container,Button,Box,Link} from '@material-ui/core';\r\nimport Title from '../FWDR/DashBoard/DashBoardFactory/Title';\r\nimport Factory from '../../Images/img/f.svg';\r\nimport Warehouse from '../../Images/img/w.svg';\r\nimport Distributor from '../../Images/img/d.svg';\r\nimport Retailer from '../../Images/img/r.svg';\r\nimport Time from '../../Images/img/t.svg';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport Nodata from './Nodata';\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"/termsandcondition\">\r\n          smart supply chain\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading:{\r\n        color:\"purple\",\r\n        fontWeight:500\r\n    },\r\n    Paper:{\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    }\r\n  }));\r\nexport default function Home({id}) {\r\n    const classes = useStyles();\r\n    const [productdata,setProductdata]=useState([]);\r\n    const [factorydata,setFactorydata]=useState([]);\r\n    const [warehousedata,setWarehousedata]=useState([]);\r\n    const [distributordata,setDistributordata]=useState([]);\r\n    const [retailerdata,setRetailerdata]=useState([]);\r\n    const [shift,setShift]=useState(0);\r\n    const [nill,setNill]=useState(1);\r\n    const [t1,setT1]=useState('');\r\n    const [t2,setT2]=useState('');\r\n    const [t3,setT3]=useState('');\r\n    const [days,setDays]=useState('')\r\n    const DateTracker1=(d1,d2,t1,t2)=>{\r\n        Axios({\r\n            url:`${process.env.REACT_APP_URL}/dateTracker`,\r\n            method:\"POST\",\r\n            data:{\r\n                d1:d1,\r\n                d2:d2,\r\n                t1:t1,\r\n                t2:t2\r\n            }\r\n        })\r\n        .then(res=>{setT1(res.data)})\r\n    }\r\n    const DateTracker2=(d1,d2,t1,t2)=>{\r\n        Axios({\r\n            url:`${process.env.REACT_APP_URL}/dateTracker`,\r\n            method:\"POST\",\r\n            data:{\r\n                d1:d1,\r\n                d2:d2,\r\n                t1:t1,\r\n                t2:t2\r\n            }\r\n        })\r\n        .then(res=>{setT2(res.data)})\r\n    }\r\n    const DateTracker3=(d1,d2,t1,t2)=>{\r\n        Axios({\r\n            url:`${process.env.REACT_APP_URL}/dateTracker`,\r\n            method:\"POST\",\r\n            data:{\r\n                d1:d1,\r\n                d2:d2,\r\n                t1:t1,\r\n                t2:t2\r\n            }\r\n        })\r\n        .then(res=>{setT3(res.data)})\r\n    }\r\n    const DateTracker4=(d1,d2,t1,t2)=>{\r\n        Axios({\r\n            url:`${process.env.REACT_APP_URL}/dateTracker`,\r\n            method:\"POST\",\r\n            data:{\r\n                d1:d1,\r\n                d2:d2,\r\n                t1:t1,\r\n                t2:t2\r\n            }\r\n        })\r\n        .then(res=>{\r\n            if((res.data).startsWith('-')){\r\n\r\n                setDays(`Product is Expried.`)\r\n            }\r\n            else{\r\n                setDays(res.data)\r\n            }\r\n        })\r\n    }\r\n    const strdate=(date)=>{\r\n       let  month=''\r\n        let darr=date.split(\"-\");\r\n        if(darr[1].toString()==='01'){month='Jan'};\r\n        if(darr[1].toString()==='02'){month='Feb'};\r\n        if(darr[1].toString()==='03'){month='Mar'};\r\n        if(darr[1].toString()==='04'){month='Apr'};\r\n        if(darr[1].toString()==='05'){month='May'};\r\n        if(darr[1].toString()==='06'){month='Jun'};\r\n        if(darr[1].toString()==='07'){month='Jul'};\r\n        if(darr[1].toString()==='08'){month='Aug'};\r\n        if(darr[1].toString()==='09'){month='Sep'};\r\n        if(darr[1].toString()==='10'){month='Oct'};\r\n        if(darr[1].toString()==='11'){month='Nov'};\r\n        if(darr[1].toString()==='12'){month='Dec'};\r\n        return `null ${month} ${darr[2]} ${darr[0]}`;\r\n\r\n    }\r\n    useEffect(()=>{\r\n                Axios({\r\n                    method:\"POST\",\r\n                    url:\"http://127.0.0.1:3005/api/PrductTracking\",\r\n                    data:{product_id:id}\r\n                }).then(res=>{\r\n                    if(res.data.flag===200){\r\n                    let date=new Date();    \r\n                    setProductdata(res.data.details[0])\r\n                    setFactorydata(res.data.details[1])\r\n                    setWarehousedata(res.data.details[2])\r\n                    setDistributordata(res.data.details[3])\r\n                    setRetailerdata(res.data.details[4])\r\n                    DateTracker1(res.data.details[0][0].Date,res.data.details[0][0].WV_date,res.data.details[0][0].Time,res.data.details[0][0].WV_time);\r\n                    DateTracker2(res.data.details[0][0].WV_date,res.data.details[0][0].DV_date,res.data.details[0][0].WV_time,res.data.details[0][0].DV_time);\r\n                    DateTracker3(res.data.details[0][0].DV_date,res.data.details[0][0].RV_date,res.data.details[0][0].DV_time,res.data.details[0][0].RV_time);\r\n                    DateTracker4(date.toDateString(),strdate(res.data.details[0][0].EDate),date.toTimeString(),date.toTimeString());\r\n                    }\r\n                    else{\r\n                       setNill(0);\r\n                    }\r\n                })\r\n            \r\n    },[])\r\n    if(factorydata===[] || warehousedata===[] || distributordata===[] || retailerdata===[] || productdata===[]  || nill===0 ){\r\n        return(\r\n            <Nodata />\r\n        )\r\n    }\r\n    else{\r\n        if(shift===0){\r\n            return(\r\n                <div>\r\n                        <h1 style={{textAlign:\"center\"}}></h1>\r\n                        {\r\n                            productdata.map(product=>(\r\n                              <Container>\r\n                                   <Paper className={classes.Paper} elevation={3}>\r\n                                       <Title>PRODUCT DETAILS</Title>\r\n                                   <img src={product.Img} style={{width:\"100px\",height:\"100px\"}} alt=\"product thumbmail\" />    \r\n                                   <Typography><span className={classes.heading}>Product Id :</span>  {product.F_id}</Typography>\r\n                                   <Typography><span className={classes.heading}>Product Name :</span>  {product.Name}</Typography>\r\n                                   <Typography><span className={classes.heading}>Product Description : </span>{product.Disc}</Typography>\r\n                                   <Typography><span className={classes.heading}>Product Prize :</span> {product.Prize} (INR) Per {product.Quantity} </Typography>\r\n                                   <Typography><span className={classes.heading}>Product Nutrition :</span> {product.Nut}</Typography>\r\n                                   <Typography><span className={classes.heading}>Product Manufacture Date :</span> {product.MDate}</Typography>\r\n                                   <Typography><span className={classes.heading}>Product Expire Date : </span>{product.EDate}</Typography>\r\n                                   <Typography><span className={classes.heading}>Product Added Date : </span>{product.Date}</Typography>\r\n                                   <Typography><span className={classes.heading}>Product Added Time :</span> {product.Time}</Typography>\r\n                                   <br></br>\r\n                                   </Paper>\r\n                              </Container>\r\n                            ))\r\n                        }\r\n                        {\r\n                            factorydata.map(factory=>(\r\n                            <Container>\r\n                                <Paper className={classes.Paper} elevation={3} >\r\n                                <Title>FACTORY DETAILS</Title>\r\n                                <img src={Factory} style={{width:\"100px\",height:\"100px\"}} alt=\"product thumbmail\" />    \r\n                                <Typography><span className={classes.heading}>Factory Name</span> : {factory.Name}</Typography>\r\n                                <Typography><span className={classes.heading}>Factory Email :</span> {factory.Email}</Typography>\r\n                                <Typography><span className={classes.heading}>Factory Phone Number :</span> {factory.Phno} </Typography>\r\n                                <Typography><span className={classes.heading}>Factory Location :</span> {factory.Location}</Typography>\r\n                                <Typography><span className={classes.heading}>Factory Owner Name:</span> {factory.Owner}</Typography>\r\n                                <Typography><span className={classes.heading}>Factory Address : </span>{factory.Address}</Typography>\r\n                                <Typography><span className={classes.heading}>Factory Type :</span> {factory.Type}</Typography>\r\n                                <Typography><span className={classes.heading}>Factory Added Date :</span> {factory.Date}</Typography>\r\n                                <br></br>\r\n                                </Paper>\r\n                           </Container>\r\n                            ))\r\n                        }\r\n                        {\r\n                            warehousedata.map(data=>(\r\n                            <Container>\r\n                                <Paper className={classes.Paper} elevation={3} >\r\n                                <Title>WAREHOUSE DETAILS</Title>\r\n                                <img src={Warehouse} style={{width:\"100px\",height:\"100px\"}} alt=\"product thumbmail\" />    \r\n                                <Typography><span className={classes.heading}>WareHouse Name :</span> {data.Name}</Typography>\r\n                                <Typography><span className={classes.heading}>WareHouse Email :</span> {data.Email}</Typography>\r\n                                <Typography><span className={classes.heading}>WareHouse Phone Number :</span> {data.Phno} </Typography>\r\n                                <Typography><span className={classes.heading}>WareHouse Location :</span> {data.Location}</Typography>\r\n                                <Typography><span className={classes.heading}>WareHouse Owner Name:</span> {data.Owner}</Typography>\r\n                                <Typography><span className={classes.heading}>WareHouse Address : </span>{data.Address}</Typography>\r\n                                <Typography><span className={classes.heading}>WareHouse Added Date :</span> {data.Date}</Typography>\r\n                                <br></br>\r\n                                </Paper>\r\n                           </Container>\r\n                            ))\r\n                        }\r\n                        {\r\n                            distributordata.map(data=>(\r\n                            <Container>\r\n                                <Paper className={classes.Paper} elevation={3} >\r\n                                <Title>DISTRIBUTOR DETAILS</Title>\r\n                                <img src={Distributor} style={{width:\"100px\",height:\"100px\"}} alt=\"product thumbmail\" />        \r\n                                <Typography><span className={classes.heading}>Distributor Name :</span> {data.Name}</Typography>\r\n                                <Typography><span className={classes.heading}>Distributor Email :</span> {data.Email}</Typography>\r\n                                <Typography><span className={classes.heading}>Distributor Phone Number :</span> {data.Phno} </Typography>\r\n                                <Typography><span className={classes.heading}>Distributor Location :</span> {data.Location}</Typography>\r\n                                <Typography><span className={classes.heading}>Distributor Owner Name:</span> {data.Owner}</Typography>\r\n                                <Typography><span className={classes.heading}>Distributor Address :</span> {data.Address}</Typography>\r\n                                <Typography><span className={classes.heading}>Distributor Added Date :</span> {data.Date}</Typography>\r\n                                <br></br>\r\n                                </Paper>\r\n                           </Container>\r\n                            ))\r\n                        }\r\n                        {\r\n                            retailerdata.map(data=>(\r\n                            <Container>\r\n                                <Paper className={classes.Paper} elevation={3} >\r\n                                <Title>RETAILER DETAILS</Title>\r\n                                <img src={Retailer} style={{width:\"100px\",height:\"100px\"}} alt=\"product thumbmail\" />    \r\n                                <Typography><span className={classes.heading}>Retailer Name : </span>{data.Name}</Typography>\r\n                                <Typography><span className={classes.heading}>Retailer Email :</span> {data.Email}</Typography>\r\n                                <Typography><span className={classes.heading}>Retailer Phone Number :</span> {data.Phno} </Typography>\r\n                                <Typography><span className={classes.heading}>Retailer Location : </span>{data.Location}</Typography>\r\n                                <Typography><span className={classes.heading}>Retailer Owner Name: </span>{data.Owner}</Typography>\r\n                                <Typography><span className={classes.heading}>Retailer Address :</span> {data.Address}</Typography>\r\n                                <Typography><span className={classes.heading}>Retailer Added Date :</span> {data.Date}</Typography>\r\n                                <br></br>\r\n                                </Paper>\r\n                           </Container>\r\n                            ))\r\n                        }\r\n                        <Container>\r\n                        <Paper className={classes.Paper} elevation={3}>\r\n                        <Title>OTHER DETAILS</Title> \r\n                        <img src={Time} style={{width:\"100px\",height:\"100px\"}} alt=\"product thumbmail\" />      \r\n                        <Typography><span className={classes.heading}>Time taken to move product  from factory to warehouse:</span> {t1}</Typography>\r\n                        <Typography ><span className={classes.heading}>Time taken to move product from warehouse to distributor : </span> {t2}</Typography>\r\n                        <Typography ><span className={classes.heading}>Time taken to move product  from distributor to retailer :</span> {t3}</Typography>\r\n                        <Typography><span className={classes.heading}>Days left to Use this Product : </span> {days}</Typography>\r\n                        <br></br>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>{setShift(1)}} ><RoomIcon /> Get Map</Button>\r\n                        <br></br>\r\n                        </Paper>\r\n                        </Container>\r\n                    <Container>\r\n                    <Paper className={classes.Paper} elevation={3}>\r\n                    <br></br>\r\n                    <Title>PRODUCT REVIEW</Title>\r\n                        <Typography>Give the starts for this product, 5 is best and 1 is least </Typography>\r\n                        <br></br>\r\n                    <Feedback id={id} />\r\n                    <br></br>\r\n                    </Paper>\r\n                    </Container>\r\n                    <Box mt={5}>\r\n                     <Copyright />\r\n                     </Box>\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else{\r\n            return(\r\n                <Map\r\n                id={id}\r\n                setShift={setShift}\r\n                 />\r\n            )\r\n        }\r\n    }\r\n}\r\n",["225","226"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Feedback.js",["227","228","229"],"import React,{useEffect, useState} from 'react'\r\nimport Axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nconst labels = {\r\n    1: 'Useless',\r\n    2: 'Poor',\r\n    3: 'Ok',\r\n    4: 'Good',\r\n    5: 'Excellent',\r\n  };\r\n  \r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: 200,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      textAlign:'center',\r\n      alignContent:'center'\r\n    }\r\n  });\r\nexport default function Feedback({id}) {\r\n    const [value, setValue] = React.useState(0);\r\n    const [hover, setHover] = React.useState(-1);\r\n    const [control,setControl]=React.useState(false);\r\n    const classes = useStyles();\r\n    const submitFeedback=()=>{\r\n        let data={\r\n            id:id,\r\n            rate:value\r\n        }\r\n        Axios({\r\n            url:`${process.env.REACT_APP_URL}/newRating`,\r\n            method:\"POST\",\r\n            data:data\r\n        }).then(res=>{\r\n           setControl(true)\r\n        })\r\n    }\r\n    return (    \r\n      <div>\r\n          <div className={classes.root}>\r\n      <Rating\r\n        name=\"hover-feedback\"\r\n        disabled={control}\r\n        value={value}\r\n        precision={1}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        size=\"large\"\r\n        onChangeActive={(event, newHover) => {\r\n          setHover(newHover);\r\n        }}\r\n      />\r\n      &nbsp;&nbsp;\r\n      {value !== null && <Typography ml={2}>{labels[hover !== -1 ? hover : value]}</Typography>}\r\n      &nbsp;&nbsp;&nbsp;&nbsp;\r\n      {control?(<Button size=\"small\"  variant=\"contained\"  color=\"secondary\" >Done</Button>):(<Button size=\"small\" variant=\"contained\" onClick={()=>{submitFeedback()}} color=\"secondary\">Submit</Button>)}\r\n      </div> \r\n      \r\n      </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Auth\\AuthToken.js",[],["230","231"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginIndex\\LoginIndex.js",[],["232","233"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Signup\\SignupRetailer\\SignupRetailer.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\DashBoardW.js",["234"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\DashBoard.js",["235"],"import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MainListItems from './listItems';\r\nimport Chart from './Chart';\r\nimport Tracker from '../DashBoardFactory/Tracker'\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\nimport Logo from '../../../../Images/Icons/Logo.png';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport {RemoveToken} from '../../../../Auth/AuthToken';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Empty from '../../../../Images/img/chart.svg';\r\nimport TEmpty from '../../../../Images/img/track.svg';\r\nimport  Product from '../DashBoardFactory/Product';\r\nimport Axios from 'axios';\r\nimport {GetToken} from '../../../../Auth/AuthToken';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Profile from './Profile';\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/termsandcondition\">\r\n        Smart Supply Chain\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow:1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  opaper:{\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    height:'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  chartHeight:{\r\n    height:420\r\n  },\r\n  openAdd:{\r\n    width:65+\"px\",\r\n    height:65+\"px\",\r\n    marginTop:45+\"px\",\r\n    marginLeft:+650+\"px\"\r\n  },\r\n  closeAdd:{\r\n    width:65+\"px\",\r\n    height:65+\"px\",\r\n    marginTop:45+\"px\",\r\n    marginLeft:780+\"px\"\r\n  },\r\n  chartopen:{\r\n    textAlign:\"center\",\r\n    opacity:\"0.2\",\r\n    width:\"350px\",\r\n    height:\"350px\",\r\n    marginLeft:\"320px\",\r\n    marginTop:\"15px\"\r\n    },\r\n    chartclose:{\r\n      textAlign:\"center\",\r\n      opacity:\"0.2\",\r\n      width:\"350px\",\r\n      height:\"350px\",\r\n      marginLeft:\"400px\",\r\n      marginTop:\"15px\"\r\n      },\r\n      trackopen:{\r\n        textAlign:\"center\",\r\n        opacity:\"0.4\",\r\n        width:\"350px\",\r\n        height:\"350px\",\r\n        marginLeft:\"320px\",\r\n        marginTop:\"15px\"\r\n        },\r\n      trackclose:{\r\n          textAlign:\"center\",\r\n          opacity:\"0.4\",\r\n          width:\"350px\",\r\n          height:\"350px\",\r\n          marginLeft:\"400px\",\r\n          marginTop:\"15px\"\r\n    },\r\n    typography: {\r\n      padding: theme.spacing(2)\r\n    },\r\n    checked:{\r\n      fontWeight:100\r\n    },\r\n    nchecked:{\r\n      fontWeight:\"bolder\"\r\n    }\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const [currentpage,setCurrentpage]=React.useState(0)\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [showChart,setShowChart]=useState(false);\r\n  const [searchkey,setSearchkey]=useState('');\r\n  const [trackkey,setTrackkey]=useState('');\r\n  const [showTracker,setShowTracker]=useState(false);\r\n  const [NotificationsCount,setNotificationsCount]=useState(0);\r\n  const [Notifications,setNotifications]=useState([]);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [Nopen, setNOpen] = React.useState(false);\r\n  const [name,setName]=useState('');\r\n  useEffect(()=>{\r\n    Axios({\r\n      method:\"POST\",\r\n      url:`${process.env.REACT_APP_URL}/profile`,\r\n      headers:{\r\n        'Authorization':`basic ${GetToken()}`\r\n      }\r\n    }).then(res=>{\r\n      setName(res.data[0].Name)\r\n    })\r\n  },[])\r\n  const search=()=>{\r\n    setShowChart(true)\r\n  }\r\n  const track=()=>{\r\n    setShowTracker(true)\r\n  }\r\n  const changePage=(page)=>{\r\n     setCurrentpage(page)\r\n  }\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  useEffect(()=>{\r\n    Axios({\r\n      url:`${process.env.REACT_APP_URL}/getNotifactions`,\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Authorization\":`basic ${GetToken()}`\r\n      }\r\n    }).then(res=>{\r\n      let noti=[];\r\n      let dt=res.data[0].messages;\r\n      noti=dt.filter(d=>{\r\n        if(d.checked===\"false\"){\r\n          return d\r\n        }\r\n      })\r\n      setNotifications(dt);\r\n      setNotificationsCount(noti.length);\r\n      \r\n    })\r\n  },[])\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setNOpen((prev)=>!prev);\r\n  };\r\n  const checkedNotification=(id)=>{\r\n    Axios({\r\n      url:`${process.env.REACT_APP_URL}/checknotification`,\r\n      headers:{\r\n        'Authorization':`basic ${GetToken()}`\r\n      },\r\n      data:{id:id},\r\n      method:\"POST\" \r\n    })\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar color=\"default\" position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img src={Logo} style={{width:\"40px\",height:\"40px\"}} alt=\"Logo\"/>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n          Smart Supply Chain [Factory]\r\n          </Typography>\r\n        <Popper style={{zIndex:2147483638}} open={Nopen} anchorEl={anchorEl} placement={'left-end'} transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper style={{width:\"20rem\",height:\"20rem\",marginRight:\"1rem\"}}>\r\n              <Button color=\"secondary\" fullWidth variant=\"contained\">Notifications</Button>\r\n              {\r\n                Notifications.map(n=>(\r\n                  <div id={n._id}>\r\n                    <Button\r\n                    style={{textTransform:\"none\"}} \r\n                    fullWidth\r\n                    \r\n                    onClick={(e)=>{checkedNotification(e.target.id)}}\r\n                     >\r\n                      <span id={n._id}  className={n.checked===\"true\"?classes.checked:classes.nchecked}>{n.text}</span>\r\n                      </Button>\r\n                  </div>\r\n\r\n                ))\r\n              }\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper >\r\n          <IconButton style={{border:\"none\"}}  color=\"inherit\" >\r\n            <Badge badgeContent={NotificationsCount?NotificationsCount:null} color=\"secondary\">\r\n              <NotificationsIcon onClick={handleClick}/>\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><MainListItems changePage={changePage} currentpage={currentpage} /></List>\r\n        <Divider />\r\n      </Drawer>\r\n\r\n\r\n        {\r\n          currentpage===0?(\r\n        <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Typography style={{fontSize:\"2rem\"}}>Hello {name},</Typography>\r\n                <Typography><br></br>Welcome to 'Smart Supply Chain'. press '+' button to add the product to Smart supply Chain. </Typography>\r\n                <AddCircleIcon onClick={()=>{setCurrentpage(5)}} color=\"secondary\" titleAccess=\"Add Product\" \r\n                className={open?classes.openAdd:classes.closeAdd}\r\n                 />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Deposits />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.opaper}>\r\n                <Orders />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n          ):(<>{\r\n            currentpage===1?(\r\n              <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Profile />\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n            ):(<>{\r\n              currentpage===2?(\r\n                <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Typography style={{textAlign:\"center\"}}><span style={{color:\"red\"}}>Note:</span>You can Track your product by entering product Id.you will get Current place of product. try it</Typography>\r\n        <br></br>\r\n        <SearchBar\r\n        value={trackkey}\r\n        onChange={(newValue) =>{setTrackkey(newValue)}}\r\n        onRequestSearch={() =>{track()}}\r\n        />\r\n        <Paper style={{marginTop:\"2rem\"}} className={classes.chartHeight}>\r\n          {showTracker?<Tracker id={trackkey} setShowTracker={setShowTracker} />:(<><img src={TEmpty} alt=\"no data\" className=\r\n          {open?classes.trackopen:classes.trackclose} /></>)}\r\n        </Paper>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n              ):(<>{\r\n                currentpage===3?(\r\n                  <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Typography style={{textAlign:\"center\"}}><span style={{color:\"red\"}}>Note:</span>You can Check your product Statistics graph by entering product Id.You will get graph between of product rate and estimated rate. try it</Typography>\r\n        <br></br>\r\n        <SearchBar\r\n         value={searchkey}\r\n        onChange={(newValue) =>{setSearchkey(newValue)}}\r\n        onRequestSearch={() =>{search()}}\r\n        /> \r\n        <Paper style={{marginTop:\"2rem\"}} className={classes.chartHeight}>\r\n          {showChart?<Chart id={searchkey} setShowChart={setShowChart} />:(<><img src={Empty} alt=\"no data\" className=\r\n          {open?classes.chartopen:classes.chartclose} /></>)}\r\n        </Paper> \r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n                ):(<>{\r\n                  currentpage===4?(\r\n                    <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Dialog\r\n        open={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Do You Really Want to Logout?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            To add product you should be logged in smart supply chain..\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>{setCurrentpage(0)}}  color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={()=>{\r\n            RemoveToken();\r\n            window.location.href=\"/\"\r\n          }}  color=\"primary\" autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n        </Container>\r\n      </main>\r\n                  ):(<>\r\n                  {\r\n                  currentpage===5?(\r\n                    <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Product />\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n                  ):null\r\n                  }</>)\r\n                }</>)\r\n              }</>)\r\n            }</>)\r\n          }</>)\r\n        }\r\n    </div>\r\n  );\r\n}",["236","237"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Product.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Tracker.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Profile.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Profile.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Product.js",["238"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\listItems.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Title.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\App.js",["239"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Cindex.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\index.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\SessionLoading\\SessionLoading.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Loading\\Loading.js",[],["240","241"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Index\\MIndex.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Signup\\SignupDistributor\\SignupDistributor.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Signup\\SignupWareHouse\\SignupWareHouse.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Signup\\SignupFactory\\SignupFactory.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginWarehouse\\Wlogin.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginRetailer\\Rlogin.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginDistributor\\Dlogin.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Login\\LoginFactory\\Flogin.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Product.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Deposits.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Orders.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\listItems.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\listItems.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Profile.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Deposits.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\listItems.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Title.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Deposits.js",[],["242","243"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardWarehouse\\Orders.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\Title.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Map.js",["244","245","246","247","248"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardRetailer\\DashBoardR.js",["249"],"import React, { useState,useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MainListItems from './listItems';\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\nimport Logo from '../../../../Images/Icons/Logo.png';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport {RemoveToken} from '../../../../Auth/AuthToken';\r\nimport  Product from './Product';\r\nimport Profile from './Profile';\r\nimport Axios from 'axios';\r\nimport {GetToken} from '../../../../Auth/AuthToken';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Fade from '@material-ui/core/Fade';\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/termsandcondition\">\r\n        Smart Supply Chain\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  opaper:{\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    height:'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  chartHeight:{\r\n    height:420\r\n  },\r\n  openAdd:{\r\n    marginTop:75+\"px\",\r\n    marginLeft:+640+\"px\"\r\n  },\r\n  closeAdd:{\r\n    marginTop:75+\"px\",\r\n    marginLeft:770+\"px\"\r\n  },\r\n  chartopen:{\r\n    textAlign:\"center\",\r\n    opacity:\"0.2\",\r\n    width:\"350px\",\r\n    height:\"350px\",\r\n    marginLeft:\"320px\",\r\n    marginTop:\"15px\"\r\n    },\r\n    chartclose:{\r\n      textAlign:\"center\",\r\n      opacity:\"0.2\",\r\n      width:\"350px\",\r\n      height:\"350px\",\r\n      marginLeft:\"400px\",\r\n      marginTop:\"15px\"\r\n      },\r\n      trackopen:{\r\n        textAlign:\"center\",\r\n        opacity:\"0.4\",\r\n        width:\"350px\",\r\n        height:\"350px\",\r\n        marginLeft:\"320px\",\r\n        marginTop:\"15px\"\r\n        },\r\n      trackclose:{\r\n          textAlign:\"center\",\r\n          opacity:\"0.4\",\r\n          width:\"350px\",\r\n          height:\"350px\",\r\n          marginLeft:\"400px\",\r\n          marginTop:\"15px\"\r\n    },\r\n    checked:{\r\n      fontWeight:100\r\n    },\r\n    nchecked:{\r\n      fontWeight:\"bolder\"\r\n    }\r\n}));\r\n\r\nexport default function DashboardW() {\r\n  const [currentpage,setCurrentpage]=React.useState(0)\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [NotificationsCount,setNotificationsCount]=useState(0);\r\n  const [Notifications,setNotifications]=useState([]);\r\n  const [name,setName]=useState('');\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [Nopen, setNOpen] = React.useState(false);\r\n  useEffect(()=>{\r\n    Axios({\r\n      method:\"POST\",\r\n      url:`${process.env.REACT_APP_URL}/profile`,\r\n      headers:{\r\n        'Authorization':`basic ${GetToken()}`\r\n      }\r\n    }).then(res=>{\r\n      setName(res.data[0].Name)\r\n    })\r\n  },[])\r\n  useEffect(()=>{\r\n    Axios({\r\n      url:`${process.env.REACT_APP_URL}/getNotifactions`,\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Authorization\":`basic ${GetToken()}`\r\n      }\r\n    }).then(res=>{\r\n      let noti=[];\r\n      let dt=res.data[0].messages;\r\n      noti=dt.filter(d=>{\r\n        if(d.checked===\"false\"){\r\n          return d\r\n        }\r\n      })\r\n      setNotifications(dt);\r\n      setNotificationsCount(noti.length);\r\n      \r\n    })\r\n  },[])\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setNOpen((prev)=>!prev);\r\n  };\r\n  const changePage=(page)=>{\r\n     setCurrentpage(page)\r\n  }\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar color=\"default\" position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img src={Logo} style={{width:\"40px\",height:\"40px\"}} alt=\"Logo\"/> \r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n           Smart Supply Chain [Retailer]\r\n          </Typography>\r\n          <Popper style={{zIndex:2147483638}} open={Nopen} anchorEl={anchorEl} placement={'left-end'} transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper style={{width:\"20rem\",height:\"20rem\",marginRight:\"1rem\"}}>\r\n              <Button color=\"secondary\" fullWidth variant=\"contained\">Notifications</Button>\r\n              {\r\n                Notifications.map(n=>(\r\n                  <div id={n._id}>\r\n                    <Button\r\n                    style={{textTransform:\"none\"}} \r\n                    fullWidth\r\n                     >\r\n                      <span  className={n.checked===\"true\"?classes.checked:classes.nchecked}>{n.text}</span>\r\n                      </Button>\r\n                  </div>\r\n\r\n                ))\r\n              }\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper >\r\n          <IconButton style={{border:\"none\"}}  color=\"inherit\" >\r\n            <Badge badgeContent={NotificationsCount?NotificationsCount:null} color=\"secondary\">\r\n              <NotificationsIcon onClick={handleClick}/>\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><MainListItems changePage={changePage} currentpage={currentpage} /></List>\r\n        <Divider />\r\n      </Drawer>\r\n\r\n\r\n        {\r\n          currentpage===0?(\r\n        <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n              <Typography style={{fontSize:\"2rem\"}}>Hello {name},</Typography>\r\n              <Typography><br></br>Welcome to 'Smart Supply Chain'. press 'verify' button to verify the product of Smart supply Chain. </Typography>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={()=>{setCurrentpage(3)}}  className={open?classes.openAdd:classes.closeAdd} >Verify</Button>\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Deposits setCurrentpage={setCurrentpage} />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.opaper}>\r\n                <Orders />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n          ):(<>{\r\n            currentpage===1?(\r\n              <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Profile />\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n            ):(<>{\r\n              currentpage===2?(\r\n                <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Dialog\r\n        open={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Do You Really Want to Logout?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            To verify product you should be logged in smart supply chain..\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>{setCurrentpage(0)}}  color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={()=>{\r\n            RemoveToken();\r\n            window.location.href=\"/\"\r\n          }}  color=\"primary\" autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n        ):(<>{\r\n                currentpage===3?(\r\n                  <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Product />\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n                ):(<>{\r\n                  currentpage===4?(\r\n                    <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n        {/* null page */}\r\n        </Container>\r\n      </main>\r\n                  ):(<>\r\n                  {\r\n                  currentpage===5?(\r\n                    <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          {/* null page */}\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n                  ):null\r\n                  }</>)\r\n                }</>)\r\n              }</>)\r\n            }</>)\r\n          }</>)\r\n        }\r\n    </div>\r\n  );\r\n}","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Chart.js",["250","251"],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Orders.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Title.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\DashBoardD.js",["252"],"import React, { useState,useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MainListItems from './listItems';\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\nimport Logo from '../../../../Images/Icons/Logo.png';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport {RemoveToken} from '../../../../Auth/AuthToken';\r\nimport  Product from '../DashBoardDistributor/Product';\r\nimport  Profile from './Profile';\r\nimport Axios from 'axios';\r\nimport {GetToken} from '../../../../Auth/AuthToken';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Fade from '@material-ui/core/Fade';\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/termsandcondition\">\r\n        Smart Supply Chain\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  opaper:{\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    height:'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  chartHeight:{\r\n    height:420\r\n  },\r\n  openAdd:{\r\n    marginTop:75+\"px\",\r\n    marginLeft:+640+\"px\"\r\n  },\r\n  closeAdd:{\r\n    marginTop:75+\"px\",\r\n    marginLeft:770+\"px\"\r\n  },\r\n  chartopen:{\r\n    textAlign:\"center\",\r\n    opacity:\"0.2\",\r\n    width:\"350px\",\r\n    height:\"350px\",\r\n    marginLeft:\"320px\",\r\n    marginTop:\"15px\"\r\n    },\r\n    chartclose:{\r\n      textAlign:\"center\",\r\n      opacity:\"0.2\",\r\n      width:\"350px\",\r\n      height:\"350px\",\r\n      marginLeft:\"400px\",\r\n      marginTop:\"15px\"\r\n      },\r\n      trackopen:{\r\n        textAlign:\"center\",\r\n        opacity:\"0.4\",\r\n        width:\"350px\",\r\n        height:\"350px\",\r\n        marginLeft:\"320px\",\r\n        marginTop:\"15px\"\r\n        },\r\n      trackclose:{\r\n          textAlign:\"center\",\r\n          opacity:\"0.4\",\r\n          width:\"350px\",\r\n          height:\"350px\",\r\n          marginLeft:\"400px\",\r\n          marginTop:\"15px\"\r\n    },\r\n    checked:{\r\n      fontWeight:100\r\n    },\r\n    nchecked:{\r\n      fontWeight:\"bolder\"\r\n    }\r\n}));\r\n\r\nexport default function DashboardD() {\r\n  const [currentpage,setCurrentpage]=React.useState(0)\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [NotificationsCount,setNotificationsCount]=useState(0);\r\n  const [Notifications,setNotifications]=useState([]);\r\n  const [name,setName]=useState('');\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [Nopen, setNOpen] = React.useState(false);\r\n  useEffect(()=>{\r\n    Axios({\r\n      method:\"POST\",\r\n      url:`${process.env.REACT_APP_URL}/profile`,\r\n      headers:{\r\n        'Authorization':`basic ${GetToken()}`\r\n      }\r\n    }).then(res=>{\r\n      setName(res.data[0].Name)\r\n    })\r\n  },[])\r\n  useEffect(()=>{\r\n    Axios({\r\n      url:`${process.env.REACT_APP_URL}/getNotifactions`,\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Authorization\":`basic ${GetToken()}`\r\n      }\r\n    }).then(res=>{\r\n      let noti=[];\r\n      let dt=res.data[0].messages;\r\n      noti=dt.filter(d=>{\r\n        if(d.checked===\"false\"){\r\n          return d\r\n        }\r\n      })\r\n      setNotifications(dt);\r\n      setNotificationsCount(noti.length);\r\n      \r\n    })\r\n  },[])\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setNOpen((prev)=>!prev);\r\n  };\r\n  const changePage=(page)=>{\r\n     setCurrentpage(page)\r\n  }\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar color=\"default\" position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <img src={Logo} style={{width:\"40px\",height:\"40px\"}} alt=\"Logo\"/> \r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n           Smart Supply Chain [Distributor]\r\n          </Typography>\r\n          <Popper style={{zIndex:2147483638}} open={Nopen} anchorEl={anchorEl} placement={'left-end'} transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper style={{width:\"20rem\",height:\"20rem\",marginRight:\"1rem\"}}>\r\n              <Button color=\"secondary\" fullWidth variant=\"contained\">Notifications</Button>\r\n              {\r\n                Notifications.map(n=>(\r\n                  <div id={n._id}>\r\n                    <Button\r\n                    style={{textTransform:\"none\"}} \r\n                    fullWidth\r\n                     >\r\n                      <span  className={n.checked===\"true\"?classes.checked:classes.nchecked}>{n.text}</span>\r\n                      </Button>\r\n                  </div>\r\n\r\n                ))\r\n              }\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper >\r\n          <IconButton style={{border:\"none\"}}  color=\"inherit\" >\r\n            <Badge badgeContent={NotificationsCount?NotificationsCount:null} color=\"secondary\">\r\n              <NotificationsIcon onClick={handleClick}/>\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><MainListItems changePage={changePage} currentpage={currentpage} /></List>\r\n        <Divider />\r\n      </Drawer>\r\n\r\n\r\n        {\r\n          currentpage===0?(\r\n        <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n              <Typography style={{fontSize:\"2rem\"}}>Hello {name},</Typography>\r\n              <Typography><br></br>Welcome to 'Smart Supply Chain'. press 'verify' button to verify the product of Smart supply Chain. </Typography>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={()=>{setCurrentpage(3)}}  className={open?classes.openAdd:classes.closeAdd} >Verify</Button>\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Deposits setCurrentpage={setCurrentpage} />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.opaper}>\r\n                <Orders />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n          ):(<>{\r\n            currentpage===1?(\r\n              <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Profile />\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n            ):(<>{\r\n              currentpage===2?(\r\n                <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Dialog\r\n        open={true}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Do You Really Want to Logout?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            To verify product you should be logged in smart supply chain..\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>{setCurrentpage(0)}}  color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={()=>{\r\n            RemoveToken();\r\n            window.location.href=\"/\"\r\n          }}  color=\"primary\" autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n        ):(<>{\r\n                currentpage===3?(\r\n                  <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Product />\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n                ):(<>{\r\n                  currentpage===4?(\r\n                    <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n        {/* null page */}\r\n        </Container>\r\n      </main>\r\n                  ):(<>\r\n                  {\r\n                  currentpage===5?(\r\n                    <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          {/* null page */}\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n                  ):null\r\n                  }</>)\r\n                }</>)\r\n              }</>)\r\n            }</>)\r\n          }</>)\r\n        }\r\n    </div>\r\n  );\r\n}","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardDistributor\\Product.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Orders.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Loading.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Deposits.js",["253"],"import React,{useState,useEffect} from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport Axios from 'axios';\r\nimport {GetToken} from '../../../../Auth/AuthToken';\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default function Deposits() {\r\n  const classes = useStyles();\r\n  const [data,setData]=useState([]);\r\n  const [year,setYear]=useState('');\r\n  useEffect(()=>{\r\n    Axios({\r\n      headers:{\r\n        'Authorization':`basic ${GetToken()}`\r\n      },\r\n      method:\"POST\",\r\n      url:`${process.env.REACT_APP_URL}/fetchfoods`,\r\n    }).then(res=>{\r\n      setData(res.data);\r\n    });\r\n  \r\n    Axios({\r\n      headers:{\r\n        'Authorization':`basic ${GetToken()}`\r\n      },\r\n      method:\"POST\",\r\n      url:`${process.env.REACT_APP_URL}/fetchYear`,\r\n    }).then(res=>{\r\n      setYear(res.data);\r\n    }); \r\n  },[])\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Total Products</Title>\r\n      <Typography component=\"p\" variant=\"h4\">\r\n        00{data.length}\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        since {year.split(\" \")[2]} {year.split(\" \")[1]} {year.split(\" \")[3]}\r\n      </Typography>\r\n      <div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\Client\\Nodata.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\Termsandcondition.js",[],"E:\\SupplyChain\\SupplyChainClient\\client\\src\\Components\\FWDR\\DashBoard\\DashBoardFactory\\Profile.js",[],{"ruleId":"254","severity":1,"message":"255","line":154,"column":7,"nodeType":"256","endLine":154,"endColumn":9,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":164,"column":25,"nodeType":"260","endLine":164,"endColumn":58},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":1,"column":15,"nodeType":"267","messageId":"268","endLine":1,"endColumn":24},{"ruleId":"265","severity":1,"message":"269","line":1,"column":26,"nodeType":"267","messageId":"268","endLine":1,"endColumn":34},{"ruleId":"265","severity":1,"message":"270","line":7,"column":8,"nodeType":"267","messageId":"268","endLine":7,"endColumn":16},{"ruleId":"261","replacedBy":"271"},{"ruleId":"263","replacedBy":"272"},{"ruleId":"261","replacedBy":"273"},{"ruleId":"263","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":226,"column":23,"nodeType":"277","messageId":"278","endLine":226,"endColumn":25},{"ruleId":"275","severity":1,"message":"276","line":249,"column":23,"nodeType":"277","messageId":"278","endLine":249,"endColumn":25},{"ruleId":"261","replacedBy":"279"},{"ruleId":"263","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":96,"column":1,"nodeType":"283","messageId":"284","endLine":118,"endColumn":18},{"ruleId":"254","severity":1,"message":"285","line":26,"column":13,"nodeType":"277","endLine":39,"endColumn":4},{"ruleId":"261","replacedBy":"286"},{"ruleId":"263","replacedBy":"287"},{"ruleId":"261","replacedBy":"288"},{"ruleId":"263","replacedBy":"289"},{"ruleId":"254","severity":1,"message":"290","line":74,"column":7,"nodeType":"256","endLine":74,"endColumn":9,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":98,"column":22,"nodeType":"260","endLine":98,"endColumn":155},{"ruleId":"292","severity":1,"message":"293","line":104,"column":22,"nodeType":"260","endLine":104,"endColumn":155},{"ruleId":"292","severity":1,"message":"293","line":110,"column":22,"nodeType":"260","endLine":110,"endColumn":155},{"ruleId":"292","severity":1,"message":"293","line":116,"column":22,"nodeType":"260","endLine":116,"endColumn":155},{"ruleId":"275","severity":1,"message":"276","line":217,"column":23,"nodeType":"277","messageId":"278","endLine":217,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":25,"column":5,"nodeType":"256","endLine":25,"endColumn":7,"suggestions":"294"},{"ruleId":"254","severity":1,"message":"295","line":45,"column":5,"nodeType":"256","endLine":45,"endColumn":9,"suggestions":"296"},{"ruleId":"275","severity":1,"message":"276","line":217,"column":23,"nodeType":"277","messageId":"278","endLine":217,"endColumn":25},{"ruleId":"265","severity":1,"message":"297","line":2,"column":8,"nodeType":"267","messageId":"268","endLine":2,"endColumn":12},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["298"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-native-reassign",["299"],"no-negated-in-lhs",["300"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'DoneIcon' is defined but never used.",["299"],["300"],["299"],["300"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["299"],["300"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching",["299"],["300"],["299"],["300"],"React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["301"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["302"],"React Hook useEffect has a missing dependency: 'setShowChart'. Either include it or remove the dependency array. If 'setShowChart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["303"],"'Link' is defined but never used.",{"desc":"304","fix":"305"},"no-global-assign","no-unsafe-negation",{"desc":"304","fix":"306"},{"desc":"304","fix":"307"},{"desc":"308","fix":"309"},"Update the dependencies array to be: [id]",{"range":"310","text":"311"},{"range":"312","text":"311"},{"range":"313","text":"311"},"Update the dependencies array to be: [id, setShowChart]",{"range":"314","text":"315"},[5550,5552],"[id]",[3964,3966],[784,786],[1261,1265],"[id, setShowChart]"]